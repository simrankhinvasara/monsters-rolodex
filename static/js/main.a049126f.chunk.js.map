{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFbC,EAAW,SAACR,GAGrB,OAFAS,QAAQC,IAAIV,GAGR,qBAAKC,UAAU,YAAf,SAEQD,EAAMW,SAASC,KAAK,SAAAR,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCTtBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCHG,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IAGhB,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBARR,E,qDAYd,WAAsB,IAAD,OACnBC,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAI,OAAI,EAAKV,SAAS,CAAET,SAAWmB,S,oBAO9C,WAAU,IAAD,EAC2BC,KAAKP,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACbW,EAAmBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC/CA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAGhD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAa,YAAc,kBACdC,aAAgBgB,KAAKhB,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,IACpB,6BAAiC,IAA5BA,EAAiBI,OAAe,aAAe,Y,GArCxCC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a049126f.chunk.js","sourcesContent":["import React from 'react' ;\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => { \r\n    console.log(props)\r\n\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map( monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react' ;\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) => (\r\n    <input \r\n        className=\"search\"\r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n    />\r\n\r\n);","import React , {Component} from 'react' ;\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json())\n    .then( user => this.setState({ monsters : user }))\n  };\n\n  handleChange = e => {\n    this.setState({searchField : e.target.value})\n  };\n\nrender() {\n  const { monsters, searchField } = this.state;\n\tconst filteredMonsters = monsters.filter(monster =>\n\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t);\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder = \"Search Monsters\" \n      handleChange = {this.handleChange}\n      />\n      <CardList monsters={filteredMonsters} />\n      <h1>{filteredMonsters.length === 0 ? \"No results\" : \"\"}</h1>\n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}